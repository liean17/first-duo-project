# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  
env:
  S3_BUCKET_NAME: kdk-first-s3
  RESOURCE_PATH: ./src/main/resources/application.yml

jobs:
  build:

    runs-on: ubuntu-20.04
    env :
      APPLICATION: ${{ secrets.APPLICATION_YML }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Set Properties
      run: |
        cd src/main/resources
        echo "${{ env.APPLICATION }}" > ./application.yml
      shell: bash
        
    - name: Server Build
      run: |   
        mkdir -p deploy-server/                              
        chmod +x ./gradlew                         
        ./gradlew clean bootjar                   
        cp build/libs/*.jar deploy-server/   
      shell: bash
  
    - name: Make zip file
      run: |
        cp appspec.yml deploy-server/appspec.yml
        cp -r scripts/deploy-aws deploy-server/scripts
        zip -r deploy-server.zip ./deploy-server
      shell: bash
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./deploy-server.zip s3://$S3_BUCKET_NAME/deploy-server.zip
    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name kdk-codedeploy
         --deployment-config-name CodeDeployDefault.AllAtOnce
         --deployment-group-name kdk-baepo-ec2-baby-comeon-cyberfunk2077-forever-juingongdie-moon
         --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=deploy-server.zip
